.group.tab data-tab= "##{ interface_element.key }"
  - if I18n.exists?("descriptions.groups.#{ interface_element.key }")
    p.information
      = I18n.t("descriptions.groups.#{ interface_element.key }")

  - interface_element.groups.each do |interface_group|
    - if interface_group.header
      strong= I18n.t("dataset_edits.groups.#{ interface_group.header }").html_safe

    .group class= ('slider-group' if interface_group.type == :slider)
      - interface_group.items.each do |interface_item|
        - if interface_group.type == :slider
          .editable.slider
            .slider-wrapper.input
              = form.label interface_item.key, DatasetEditForm.human_attribute_name(interface_item.key).html_safe

              .slider data-key= interface_item.key data-flexible= ('flex' if interface_item.flexible) data-editable= (policy(@dataset).edit? ? '1' : '0')
              span.history data-key= interface_item.key
                - if interface_item.flexible
                  i.fa
                - else
                  i.fa.fa-info

              span.val data= conversions_for(interface_item.key)
                span.display_value
                - if interface_item.whitelisted?
                  = form.hidden_field interface_item.key, class: interface_item.key

              span.unit
                = '%'

              .clear

        - else
          .editable data-key=interface_item.key
            .border
            .input
              .left
                = form.label interface_item.key, DatasetEditForm.human_attribute_name(interface_item.key).html_safe

              .right
                span.history data-key= interface_item.key
                  i.fa.fa-info

                span.val data= conversions_for(interface_item.key)
                  - if policy(@dataset).edit?
                    = text_field_tag interface_item.key, nil, class: 'display_input', placeholder: interface_item.default
                    = form.hidden_field interface_item.key, class: 'value_input'

                  - else
                    span.read-only
                      - if value = form.object.public_send(interface_item.key)
                        = value.round(2)
                      | &nbsp;

                span.unit data-to= interface_item.unit
                  = I18n.t("units.#{ interface_item.key }.from", default: interface_item.unit).html_safe
              .clear

        - unless interface_item.flexible
          .history.hidden class= interface_item.key
            .line-arrow

            - if I18n.exists?("dataset_edits.explanation.#{interface_item.key}")
              p=I18n.t("dataset_edits.explanation.#{interface_item.key}")

            strong = I18n.t("dataset_edits.history")

            - @dataset.editable_attributes.edits_for(interface_item.key).each do |dataset_edit|
              .change
                .history-line
                  span.border
                  span.line
                    span.created
                      => I18n.l dataset_edit.created_at, format: :short
                    span.by
                      => I18n.t("dataset_edits.changed_by", user: dataset_edit.commit.user.name)
                    span.to
                      | &rarr;
                      | &nbsp;
                      = dataset_edit.value

                .content
                  .reason
                    = simple_format dataset_edit.commit.message

                  - if dataset_edit.commit.source
                    .source
                      = link_to I18n.t("dataset_edits.download_source"), dataset_edit.commit.source.source_file.url, class: "button"

                .clear
