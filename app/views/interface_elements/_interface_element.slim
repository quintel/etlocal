.group.tab data-tab= "##{ interface_element.key }"
  - if I18n.exists?("descriptions.groups.#{ interface_element.key }")
    p.information
      = t("descriptions.groups.#{ interface_element.key }").html_safe

  - interface_element.groups.each do |interface_group|
    - if interface_group.header
      h3= t("dataset_edits.groups.#{ interface_group.header }").html_safe
      - if I18n.exists?("descriptions.subgroups.#{ interface_group.header }")
        p= t("descriptions.subgroups.#{ interface_group.header }").html_safe

    .group class= ('slider-group' if interface_group.type == :slider)
      - if interface_group.type == :files
        = render('interface_elements/files_element', dataset: dataset, form: form, interface_element: interface_element, interface_group: interface_group)
      - else
        - interface_group.items.each do |interface_item|
          - if interface_group.type == :slider
            .editable.slider
              .slider-wrapper.input
                = form.label interface_item.key, DatasetEditForm.human_attribute_name(interface_item.key).html_safe

                .slider data-key= interface_item.key data-flexible= ('flex' if interface_item.flexible) data-editable= (policy(@dataset).edit? ? '1' : '0')
                span.history data-key= interface_item.key
                  .fa.fa-info

                span.val data= conversions_for(interface_item.key)
                  span.display_value
                  - if interface_item.whitelisted?
                    = form.hidden_field interface_item.key, class: interface_item.key

                span.unit
                  = '%'

                .clear

          - else
            .editable.field data-key=interface_item.key
              .border
              .input
                .left
                  = form.label interface_item.key, DatasetEditForm.human_attribute_name(interface_item.key).html_safe

                .right
                  span.history data-key= interface_item.key
                    i.fa.fa-info

                  span.val data= conversions_for(interface_item.key)
                    - if policy(@dataset).edit?
                      = text_field_tag interface_item.key, nil, class: 'display_input', placeholder: interface_item.default
                      = form.hidden_field interface_item.key, class: 'value_input'

                    - else
                      span.read-only
                        - if value = form.object.public_send(interface_item.key)
                          // A little misuse of number to currency for formatting values for locales
                          - if interface_item.key == :analysis_year
                            = value.round
                          - elsif interface_item.unit == 'â‚¬'
                            = number_to_currency(value, precision: 0, unit: '')
                          - else
                            = number_to_currency(value, precision: 2, unit: '')
                        | &nbsp;

                  span.unit data-to= interface_item.unit
                    = I18n.t("units.#{ interface_item.key }.from", default: interface_item.unit).html_safe
                .clear

          .history.hidden class= interface_item.key
            .line-arrow

            - if I18n.exists?("descriptions.interface_items.#{interface_item.key}")
              p=I18n.t("descriptions.interface_items.#{interface_item.key}").html_safe

            strong= I18n.t("dataset_edits.history")

            - @dataset.editable_attributes.edits_for(interface_item.key).each do |dataset_edit|
              .change
                .created_by
                  .to
                    => I18n.t("dataset_edits.changed_to", value: number_to_currency(dataset_edit.value, precision: 2, unit: ''))
                  .by
                    = "#{dataset_edit.creator}, #{I18n.l dataset_edit.created_at, format: :short}"

                .reason
                  = simple_format dataset_edit.commit.message
